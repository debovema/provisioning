apiVersion: v1
kind: ConfigMap
metadata:
  name: update-wireguard-script
  namespace: kube-system
data:
  script: |-
    #!/bin/bash
    # update-wireguard.sh
    for key in `ETCDCTL_API=3 etcdctl get --endpoints=http://localhost:2379 --prefix /calico/ipam/v2/host | grep /calico/ipam/v2/host`
      do
        regex="\/calico\/ipam\/v2\/host\/(.*)\/ipv4\/block\/(.*)"
        if  [[ $key =~ $regex ]]
        then
          hostname=${BASH_REMATCH[1]}
          subnet=${BASH_REMATCH[2]}
          subnet=$(echo $subnet | sed 's|-|/|') # replace - by / in subnet
          ip=$(getent hosts $hostname | awk '{ print $1 }')
          echo "Hostname $hostname ($ip) has subnet $subnet"
          sed -i "s|AllowedIps = ${ip}/32.*|AllowedIps = ${ip}/32,${subnet}|" /etc/wireguard/wg0.conf
        fi
     done
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: calico-wg-controller
  name: calico-wg-controller
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: calico-wg-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: calico-wg-controller
      name: calico-wg-controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
      containers:
      - args:
        - watch
        - --endpoints=http://localhost:2379
        - --prefix
        - /calico/ipam/v2/host
        - --
        - /scripts/update-wireguard.sh
        command:
        - etcdctl
        env:
        - name: ETCDCTL_API
          value: "3"
        image: debovema/etcd:v3.3.0-rc.2
        imagePullPolicy: IfNotPresent
        name: calico-wg-controller
        resources: {}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /scripts
          name: update-wireguard-script
        - mountPath: /etc/wireguard
          name: etc-wireguard-config
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      volumes:
      - name: update-wireguard-script
        configMap:
          defaultMode: 484
          name: update-wireguard-script
          items:
          - key: script
            path: update-wireguard.sh
      - name: etc-wireguard-config
        hostPath:
          path: /etc/wireguard
          type: Directory
 
